eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICBpbWFnZTogYXJtaGZidWlsZC9nb2xhbmc6MS42LWFscGluZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gQ0dPX0VOQUJMRUQ9MAogICAgICAtIEdPUEFUSD0vZHJvbmUKICAgICAgIy0gQ1JPU1NfVEFSR0VUUz0ibGludXgvMzg2IGxpbnV4L2FtZDY0IGxpbnV4L2FybSBsaW51eC9hcm02NCBkYXJ3aW4vMzg2IGRhcndpbi9hbWQ2NCB3aW5kb3dzLzM4NiB3aW5kb3dzL2FtZDY0IgogICAgICAtIENST1NTX1RBUkdFVFM9IidsaW51eC8zODYgbGludXgvYXJtJyIKICAgIGNvbW1hbmRzOgogICAgICAtIGV4cG9ydCBWRVJTSU9OPSR7RFJPTkVfVEFHPW1hc3Rlcn0KICAgICAgLSBhcGsgYWRkIC0tbm8tY2FjaGUgY2EtY2VydGlmaWNhdGVzIGdpdAogICAgICAtIGV4cG9ydCBQQVRIPSRHT1BBVEgvYmluOiRQQVRICiAgICAgIC0gZ28gZ2V0IGdpdGh1Yi5jb20vbWl0Y2hlbGxoL2dveAogICAgICAtIGdvIGdldCBnaXRodWIuY29tL01hc3Rlcm1pbmRzL2dsaWRlCiAgICAgIC0gZ2xpZGUgaQogICAgICAtIGV4cG9ydCBJTVBPUlRfUEFUSD0kKGdsaWRlIG5hbWUpCgogICAgIyAgIC0gZ28gdmV0ICRJTVBPUlRfUEFUSAogICAgIyAgIC0gZ28gdGVzdCAtdiAtY292ZXIgJChnbGlkZSBudikKICAgICMgICAtIEdPT1M9bGludXggICBHT0FSQ0g9Mzg2ICAgZ28gYnVpbGQgLW8gZGlzdC9vZHluXyRHT09TXyRHT0FSQ0ggLWxkZmxhZ3MgJy1zIC1YICJtYWluLmFwcFZlcnNpb249JFZFUlNJT04iIC1leHRsZGZsYWdzICItc3RhdGljIicgJElNUE9SVF9QQVRIL2NsaQogICAgIyAgIC0gR09PUz1saW51eCAgIEdPQVJDSD1hbWQ2NCBnbyBidWlsZCAtbyBkaXN0L29keW5fJEdPT1NfJEdPQVJDSCAtbGRmbGFncyAnLXMgLVggIm1haW4uYXBwVmVyc2lvbj0kVkVSU0lPTiIgLWV4dGxkZmxhZ3MgIi1zdGF0aWMiJyAkSU1QT1JUX1BBVEgvY2xpCiAgICAjICAtIEdPT1M9bGludXggICBHT0FSQ0g9YXJtICAgZ28gYnVpbGQgLW8gZGlzdC9vZHluXyRHT09TXyRHT0FSQ0ggLWxkZmxhZ3MgJy1zIC1YICJtYWluLmFwcFZlcnNpb249JFZFUlNJT04iIC1leHRsZGZsYWdzICItc3RhdGljIicgJElNUE9SVF9QQVRIL2NsaQogICAgIyAgIC0gR09PUz1saW51eCAgIEdPQVJDSD1hcm02NCBnbyBidWlsZCAtbyBkaXN0L29keW5fJEdPT1NfJEdPQVJDSCAtbGRmbGFncyAnLXMgLVggIm1haW4uYXBwVmVyc2lvbj0kVkVSU0lPTiIgLWV4dGxkZmxhZ3MgIi1zdGF0aWMiJyAkSU1QT1JUX1BBVEgvY2xpCiAgICAjICAgLSBHT09TPWRhcndpbiAgR09BUkNIPTM4NiAgIGdvIGJ1aWxkIC1vIGRpc3Qvb2R5bl8kR09PU18kR09BUkNIIC1sZGZsYWdzICctcyAtWCAibWFpbi5hcHBWZXJzaW9uPSRWRVJTSU9OIiAtZXh0bGRmbGFncyAiLXN0YXRpYyInICRJTVBPUlRfUEFUSC9jbGkKICAgICMgICAtIEdPT1M9ZGFyd2luICBHT0FSQ0g9YW1kNjQgZ28gYnVpbGQgLW8gZGlzdC9vZHluXyRHT09TXyRHT0FSQ0ggLWxkZmxhZ3MgJy1zIC1YICJtYWluLmFwcFZlcnNpb249JFZFUlNJT04iIC1leHRsZGZsYWdzICItc3RhdGljIicgJElNUE9SVF9QQVRIL2NsaQogICAgIyAgIC0gR09PUz13aW5kb3dzIEdPQVJDSD0zODYgICBnbyBidWlsZCAtbyBkaXN0L29keW5fJEdPT1NfJEdPQVJDSCAtbGRmbGFncyAnLXMgLVggIm1haW4uYXBwVmVyc2lvbj0kVkVSU0lPTiIgLWV4dGxkZmxhZ3MgIi1zdGF0aWMiJyAkSU1QT1JUX1BBVEgvY2xpCiAgICAjICAgLSBHT09TPXdpbmRvd3MgR09BUkNIPWFtZDY0IGdvIGJ1aWxkIC1vIGRpc3Qvb2R5bl8kR09PU18kR09BUkNIIC1sZGZsYWdzICctcyAtWCAibWFpbi5hcHBWZXJzaW9uPSRWRVJTSU9OIiAtZXh0bGRmbGFncyAiLXN0YXRpYyInICRJTVBPUlRfUEFUSC9jbGkKICAgICAgLSBnb3ggLW91dHB1dD0iZGlzdC9vZHluX3t7Lk9TfX1fe3suQXJjaH19IiAtb3NhcmNoPSJsaW51eC8zODYgbGludXgvYXJtIiAtbGRmbGFncyAnLXMgLVggIm1haW4uYXBwVmVyc2lvbj0kVkVSU0lPTiIgLWV4dGxkZmxhZ3MgIi1zdGF0aWMiJyAkSU1QT1JUX1BBVEgvY2xpCiAgICAgIC0gY3AgL2V0Yy9zc2wvY2VydHMvY2EtY2VydGlmaWNhdGVzLmNydCAuCiAgICAgIC0gbHMgLWxhaCBkaXN0LwogICAgICAtIGxkZCBkaXN0LyoKICAgICAgLSBhcGsgYWRkIC0tbm8tY2FjaGUgZmlsZQogICAgICAtIGZpbGUgZGlzdC8qCiAgICAgIC0gLi9kaXN0L29keW5fbGludXhfYXJtIC0tdmVyc2lvbgoKCiNnb3ggLW91dHB1dD0iZGlzdC9vZHluX3t7Lk9TfX1fe3suQXJjaH19IiAtb3NhcmNoPSIkQ1JPU1NUQVJHRVQiIC1sZGZsYWdzICctcyAtWCAibWFpbi5hcHBWZXJzaW9uPSRWRVJTSU9OIiAtZXh0bGRmbGFncyAiLXN0YXRpYyInICRJTVBPUlRfUEFUSC9jbGkKCiAgc2xhY2s6CiAgICB3aGVuOgogICAgICBzdGF0dXM6IFsgZmFpbHVyZSwgc3VjY2VzcyBdCg.gmNFqQXZQUjw3qhCEjuIj8sC1193QPUBwDp9-Dzmx1c
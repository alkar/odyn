# matrix:
#   CROSS_TARGETS:
#     - linux/386
#     - linux/arm

pipeline:
  build:
    image: armhfbuild/golang:1.6-alpine
    environment:
      - CGO_ENABLED=0
      - GOPATH=/drone
      #- CROSS_TARGETS="linux/386 linux/amd64 linux/arm linux/arm64 darwin/386 darwin/amd64 windows/386 windows/amd64"
      - CROSS_TARGETS="'linux/386 linux/arm'"
    commands:
      - export VERSION=${DRONE_TAG=master}
      - apk add --no-cache ca-certificates git
      - export PATH=$GOPATH/bin:$PATH
      - go get github.com/mitchellh/gox
      - go get github.com/Masterminds/glide
      - glide i
      - export IMPORT_PATH=$(glide name)

    #   - go vet $IMPORT_PATH
    #   - go test -v -cover $(glide nv)
    #   - GOOS=linux   GOARCH=386   go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=linux   GOARCH=amd64 go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #  - GOOS=linux   GOARCH=arm   go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=linux   GOARCH=arm64 go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=darwin  GOARCH=386   go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=darwin  GOARCH=amd64 go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=windows GOARCH=386   go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
    #   - GOOS=windows GOARCH=amd64 go build -o dist/odyn_$GOOS_$GOARCH -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
      - gox -output="dist/odyn_{{.OS}}_{{.Arch}}" -osarch="${CROSS_TARGETS}" -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli
      - cp /etc/ssl/certs/ca-certificates.crt .
      - ls -lah dist/
      - ldd dist/*
      - apk add --no-cache file
      - file dist/*
      - ./dist/odyn_linux_arm --version


#gox -output="dist/odyn_{{.OS}}_{{.Arch}}" -osarch="$CROSSTARGET" -ldflags '-s -X "main.appVersion=$VERSION" -extldflags "-static"' $IMPORT_PATH/cli

  slack:
    when:
      status: [ failure, success ]
